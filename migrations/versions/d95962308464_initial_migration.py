"""initial migration

Revision ID: d95962308464
Revises:
Create Date: 2024-10-16 15:13:04.927341

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "d95962308464"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "assessments",
        sa.Column("assessment_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("assessment_id"),
    )
    op.create_table(
        "courses",
        sa.Column("course_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("summary", sa.Text(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("course_id"),
    )
    with op.batch_alter_table("courses", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_courses_name"), ["name"], unique=True)

    op.create_table(
        "groups",
        sa.Column("group_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("abbreviation", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("group_id"),
    )
    with op.batch_alter_table("groups", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_groups_abbreviation"), ["abbreviation"], unique=True
        )
        batch_op.create_index(batch_op.f("ix_groups_name"), ["name"], unique=True)

    op.create_table(
        "lessons",
        sa.Column("lesson_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("index", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("lesson_id"),
    )
    with op.batch_alter_table("lessons", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_lessons_name"), ["name"], unique=False)

    op.create_table(
        "permissions",
        sa.Column("permission_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("flag", sa.Integer(), nullable=False),
        sa.Column("codename", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("permission_id"),
        sa.UniqueConstraint("flag"),
    )
    with op.batch_alter_table("permissions", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_permissions_codename"), ["codename"], unique=True
        )
        batch_op.create_index(batch_op.f("ix_permissions_name"), ["name"], unique=True)

    op.create_table(
        "questions",
        sa.Column("question_id", sa.UUID(), nullable=False),
        sa.Column("question", sa.String(length=255), nullable=False),
        sa.Column("type", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("question_id"),
    )
    op.create_table(
        "answers",
        sa.Column("answer_id", sa.UUID(), nullable=False),
        sa.Column("answer", sa.Text(), nullable=False),
        sa.Column("question_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.question_id"],
        ),
        sa.PrimaryKeyConstraint("answer_id"),
    )
    with op.batch_alter_table("answers", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_answers_question_id"), ["question_id"], unique=True
        )

    op.create_table(
        "choices",
        sa.Column("choice_id", sa.UUID(), nullable=False),
        sa.Column("choice", sa.String(length=255), nullable=False),
        sa.Column("question_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.question_id"],
        ),
        sa.PrimaryKeyConstraint("choice_id"),
    )
    op.create_table(
        "users",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("fullname", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_staff", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("registered_at", sa.DateTime(), nullable=False),
        sa.Column("registered_by_id", sa.UUID(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=False),
        sa.Column("group_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.group_id"],
        ),
        sa.ForeignKeyConstraint(
            ["registered_by_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_users_username"), ["username"], unique=True
        )

    op.create_table(
        "assessment_questions",
        sa.Column("assessment_id", sa.UUID(), nullable=False),
        sa.Column("question_id", sa.UUID(), nullable=False),
        sa.Column("assigned_at", sa.DateTime(), nullable=False),
        sa.Column("assigned_by_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assessment_id"],
            ["assessments.assessment_id"],
        ),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.question_id"],
        ),
        sa.PrimaryKeyConstraint("assessment_id", "question_id"),
    )
    op.create_table(
        "audit_logs",
        sa.Column("audit_log_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("object_id", sa.String(length=255), nullable=False),
        sa.Column("flag", sa.Integer(), nullable=False),
        sa.Column("table_name", sa.String(length=255), nullable=False),
        sa.Column("changed_data", sa.Text(), nullable=True),
        sa.Column("justification", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("audit_log_id"),
    )
    op.create_table(
        "course_assessments",
        sa.Column("course_id", sa.UUID(), nullable=False),
        sa.Column("assessment_id", sa.UUID(), nullable=False),
        sa.Column("assigned_at", sa.DateTime(), nullable=False),
        sa.Column("assigned_by_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assessment_id"],
            ["assessments.assessment_id"],
        ),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.course_id"],
        ),
        sa.PrimaryKeyConstraint("course_id", "assessment_id"),
    )
    op.create_table(
        "course_lessons",
        sa.Column("course_id", sa.UUID(), nullable=False),
        sa.Column("lesson_id", sa.UUID(), nullable=False),
        sa.Column("assigned_at", sa.DateTime(), nullable=False),
        sa.Column("assigned_by_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.course_id"],
        ),
        sa.ForeignKeyConstraint(
            ["lesson_id"],
            ["lessons.lesson_id"],
        ),
        sa.PrimaryKeyConstraint("course_id", "lesson_id"),
    )
    op.create_table(
        "group_permissions",
        sa.Column("group_id", sa.UUID(), nullable=False),
        sa.Column("permission_id", sa.UUID(), nullable=False),
        sa.Column("assigned_at", sa.DateTime(), nullable=False),
        sa.Column("assigned_by_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.group_id"],
        ),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.permission_id"],
        ),
        sa.PrimaryKeyConstraint("group_id", "permission_id"),
    )
    op.create_table(
        "mails",
        sa.Column("mail_id", sa.UUID(), nullable=False),
        sa.Column("sender_id", sa.UUID(), nullable=False),
        sa.Column("recipients", sa.Text(), nullable=False),
        sa.Column("subject", sa.String(length=255), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("mail_id"),
    )
    op.create_table(
        "profiles",
        sa.Column("profile_id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column("years_of_experience", sa.Integer(), nullable=False),
        sa.Column("profile_picture", sa.String(length=255), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("profile_id"),
    )
    op.create_table(
        "user_assessment_questions",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("assessment_id", sa.UUID(), nullable=False),
        sa.Column("question_id", sa.UUID(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("skiped_at", sa.DateTime(), nullable=True),
        sa.Column("is_completed", sa.Boolean(), nullable=False),
        sa.Column("is_skiped", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assessment_id"],
            ["assessments.assessment_id"],
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.question_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "assessment_id", "question_id"),
    )
    op.create_table(
        "user_assessments",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("assessment_id", sa.UUID(), nullable=False),
        sa.Column("assigned_at", sa.DateTime(), nullable=False),
        sa.Column("assigned_by_id", sa.UUID(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("is_on_hold", sa.DateTime(), nullable=False),
        sa.Column("is_started", sa.Boolean(), nullable=False),
        sa.Column("is_completed", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assessment_id"],
            ["assessments.assessment_id"],
        ),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "assessment_id"),
    )
    op.create_table(
        "user_courses",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("course_id", sa.UUID(), nullable=False),
        sa.Column("assigned_at", sa.DateTime(), nullable=False),
        sa.Column("assigned_by_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.course_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "course_id"),
    )
    op.create_table(
        "user_permissions",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("permission_id", sa.UUID(), nullable=False),
        sa.Column("assigned_at", sa.DateTime(), nullable=False),
        sa.Column("assigned_by_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assigned_by_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.permission_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "permission_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_permissions")
    op.drop_table("user_courses")
    op.drop_table("user_assessments")
    op.drop_table("user_assessment_questions")
    op.drop_table("profiles")
    op.drop_table("mails")
    op.drop_table("group_permissions")
    op.drop_table("course_lessons")
    op.drop_table("course_assessments")
    op.drop_table("audit_logs")
    op.drop_table("assessment_questions")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_username"))

    op.drop_table("users")
    op.drop_table("choices")
    with op.batch_alter_table("answers", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_answers_question_id"))

    op.drop_table("answers")
    op.drop_table("questions")
    with op.batch_alter_table("permissions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_permissions_name"))
        batch_op.drop_index(batch_op.f("ix_permissions_codename"))

    op.drop_table("permissions")
    with op.batch_alter_table("lessons", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_lessons_name"))

    op.drop_table("lessons")
    with op.batch_alter_table("groups", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_groups_name"))
        batch_op.drop_index(batch_op.f("ix_groups_abbreviation"))

    op.drop_table("groups")
    with op.batch_alter_table("courses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_courses_name"))

    op.drop_table("courses")
    op.drop_table("assessments")
    # ### end Alembic commands ###
