[project]
name = "trainable"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "flask>=3.0.3",
    "flask-bcrypt>=1.0.1",
    "flask-login>=0.6.3",
    "flask-migrate>=4.0.7",
    "flask-sqlalchemy>=3.1.1",
    "flask-wtf>=1.2.1",
    "flask-ckeditor>=1.0.0",
    "bleach>=6.1.0",
    "ruff>=0.6.9",
    "python-dotenv>=1.0.1",
    "psycopg2-binary>=2.9.10",
    "gunicorn>=23.0.0",
]

[tool.uv]
dev-dependencies = [
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "migrations"]

[tool.ruff]
target-version = "py310"
exclude = ["migrations"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true